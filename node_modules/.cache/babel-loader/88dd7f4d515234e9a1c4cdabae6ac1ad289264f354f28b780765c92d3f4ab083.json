{"ast":null,"code":"import Navbar from \"@/components/Navbar.vue\";\nimport axios from \"axios\";\nimport { mapState } from \"vuex\";\nexport default {\n  name: \"DetailProduct\",\n  components: {\n    Navbar\n  },\n  data: function () {\n    return {\n      checkoutBag: [],\n      // product: ``,\n      pesan: {\n        id: ``,\n        jumlah: 1,\n        size: `Size S`,\n        products: []\n      },\n      menu: `detail`\n    };\n  },\n  methods: {\n    ...mapState([`product`]),\n    ubahKeranjang: function (id, item) {\n      axios.put(\"http://localhost:3000/checkout/\" + id, {\n        id: item.id,\n        jumlah: item.jumlah,\n        size: item.size,\n        products: {\n          id: item.products.id,\n          kode: item.products.kode,\n          nama: item.products.nama,\n          harga: item.products.harga,\n          is_ready: item.products.is_ready,\n          gambar: item.products.gambar\n        }\n      }).then(() => {\n        // this.$router.push({ path : '/keranjang' })\n        this.$toast.success(`Pesanan ditambahkan ke keranjang`, {\n          duration: 3000,\n          message: `Pesanan berhasil ditambahkan`,\n          position: `top-right`,\n          dismissible: true\n        });\n        //  setelah post axios, data checkout akan langsung ditampilkan\n        axios.get(\"http://localhost:3000/checkout\").then(response => this.setCheckout(response.data)).catch(error => console.log(\"gagal : \", error));\n      }).catch(error => console.log(\"gagal : \", error));\n    },\n    hapusKeranjang: function (id) {\n      // axios hapus data\n      axios.delete(\"http://localhost:3000/checkout/\" + id).then(() => {\n        this.$toast.success(`Pesanan berhasil dihapus`, {\n          duration: 3000,\n          message: `Pesanan berhasil dihapus`,\n          position: `top-right`,\n          dismissible: true\n        });\n        // setelah dihapus, panggil kembali data yg tersisa\n        axios.get(\"http://localhost:3000/checkout\").then(response => this.setCheckout(response.data)).catch(error => console.log(\"gagal : \", error));\n      })\n      // axios gagal mengambil data\n      .catch(error => console.log(\"gagal : \", error));\n    },\n    submitOrder: function () {\n      if (this.pesan.jumlah) {\n        this.pesan.products = this.product;\n        axios.post(\"http://localhost:3000/checkout\", this.pesan).then(() => {\n          // this.$router.push({ path : '/keranjang' })\n          this.$toast.success(`Pesanan ditambahkan ke keranjang`, {\n            duration: 3000,\n            message: `Pesanan berhasil ditambahkan`,\n            position: `top-right`,\n            dismissible: true\n          });\n          //  setelah post axios, data checkout akan langsung ditampilkan\n          axios.get(\"http://localhost:3000/checkout\").then(response => this.setCheckout(response.data)).catch(error => console.log(\"gagal : \", error));\n        }).catch(error => console.log(\"gagal : \", error));\n      } else {\n        this.$toast.error(`Jumlah pesanan harus diisi`, {\n          duration: 3000,\n          message: `Jumlah pesanan harus diisi`,\n          position: `top-right`,\n          dismissible: true\n        });\n      }\n    },\n    setCheckout: function (data) {\n      this.checkoutBag = data;\n      ;\n      // console.log(this.checkoutBag)\n    },\n\n    setProduct: function (data) {\n      this.product = data;\n      // console.log(data);\n    },\n\n    active: function (data) {\n      // jika isi menu sama dengan data baru dari function active\n      if (this.menu === data) {\n        // kembalikan isi function berupa true\n        return true;\n      }\n    },\n    buttonActive: function (dataButton) {\n      // jika data menu sama dengan data menu\n      if (this.menu === this.menu) {\n        // console.log(dataButton)\n        // ubah data menu menjadi data baru dari parameter function button active\n        this.menu = dataButton;\n      }\n    }\n  },\n  computed: {\n    totalHarga: function () {\n      return this.checkoutBag.reduce((acc, curr) => {\n        return acc + curr.products.harga * curr.jumlah;\n      }, 0);\n    }\n  },\n  mounted() {\n    axios.get(\"http://localhost:3000/products/\" + this.$route.params.id).then(response => this.setProduct(response.data)).catch(error => console.log(\"gagal : \", error));\n    axios.get(\"http://localhost:3000/checkout\").then(response => this.setCheckout(response.data)).catch(error => console.log(\"gagal : \", error));\n  }\n};","map":{"version":3,"mappings":"AA0IA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;EACA;EAEAC;IACA;MACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;IACA;EACA;EAEAC;IAEA;IAEAC;MACAC,MACAC,4CACA;QACAR;QACAC;QACAC;QACAC;UACAH;UACAS;UACAC;UACAC;UACAC;UACAC;QACA;MACA,GACAC;QACA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;QACA;QACAX,MACAY,sCACAL,kDACAM;MACA,GACAA;IAEA;IAEAC;MACA;MACAd,MACAe,+CACAR;QACA;UACAC;UACAC;UACAC;UACAC;QACA;QACA;QACAX,MACAY,sCACAL,kDACAM;MACA;MACA;MAAA,CACAA;IACA;IAEAG;MACA;QACA;QACAhB,MACAiB,mDACAV;UACA;UACA;YACAC;YACAC;YACAC;YACAC;UACA;UACA;UACAX,MACAY,sCACAL,kDACAM;QACA,GACAA;MACA;QACA;UACAL;UACAC;UACAC;UACAC;QACA;MACA;IAEA;IAEAO;MACA;MAAA;MACA;IACA;;IAEAC;MACA;MACA;IACA;;IACAC;MACA;MACA;QACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;QACA;MACA;IACA;EACA;EAEAC;IACAxB,MACAY,+DACAL,iDACAM;IAEAb,MACAY,sCACAL,kDACAM;EAEA;AACA","names":["name","components","Navbar","data","checkoutBag","pesan","id","jumlah","size","products","menu","methods","ubahKeranjang","axios","put","kode","nama","harga","is_ready","gambar","then","duration","message","position","dismissible","get","catch","hapusKeranjang","delete","submitOrder","post","setCheckout","setProduct","active","buttonActive","computed","totalHarga","mounted"],"sourceRoot":"src/views","sources":["DetailProduct.vue"],"sourcesContent":["<template>\n  <div class=\"detailProduct\">\n    <Navbar/>\n    <div class=\"container-fluid mt-5\">\n        <div class=\"row\">\n            <div class=\"col-md-4 mt-5\">\n              <div class=\"card border-0 shadow mx-2\">\n                <img\n                  :src=\"'../assets/pakaian/'+product.gambar\"\n                  class=\"card-img-top\"\n                  alt=\"...\"\n                />\n              </div>\n            </div>\n            <div class=\"col-md-5 mt-5 judulForm\">\n                <h1>{{product.nama}}</h1>\n                <h3>Rp. {{product.harga}}</h3>\n                  <div class=\"menu-detail mt-3\">\n                    <button type=\"button\" class=\"btnEdit\" :class=\"{active:active(`detail`)}\" @click = \"buttonActive(`detail`)\">Detail Ukuran</button>\n                    <button type=\"button\" class=\"btnEdit\" :class=\"{active:active(`rincian`)}\" @click = \"buttonActive(`rincian`)\">Rincian</button>\n                    <hr></div>\n                    <div v-if=\"this.menu === `detail`\">\n                  <div class=\"isiDetail\">\n                    <p>\n                      Bahan: ice silk / Lycra <br><br>\n                      Karakteristik bahan:\n                      <ul>\n                        <li> Anti UV UPF > 40</li>\n                        <li>Breathable & Quickdry (nayaman dipakai)</li>\n                        <li>menjaga suhu tubu (sensasi dingin)</li>\n                        <li>Elastic & Light Weight</li>\n                      </ul>\n                      Fitur lainnya: \n                      <ul>\n                        <li>Scotchlite reflektive tape pada sablon logo</li>\n                        <li>Anti slip di lengan atas mencegah manset turun / kendor</li>\n                        <li>Awet & tahan lama (jahitan kuat dengan 4 jarum dan 6 benang)</li>\n                      </ul>\n                      Ukuran :\n                      <ul>\n                        <li>S: Panjang 39.5cm, lebar lengan bawah 7cm, lebar lengan atas 12cm</li>\n                        <li>M: Panjang 42.5cm, lebar lengan bawah 8cm, lebar lengan atas 13cm</li>\n                        <li>L: Panjang 44.5cm, lebar lengan bawah 9cm, lebar lengan atas 14cm</li>\n                        <li>XL: Panjang 46.5cm, lebar lengan bawah 10cm, lebar lengan atas 15cm</li>\n                      </ul>\n                      Setiap pembelian mendapatkan 1 pasang (kiri - kanan) + packaging berupa pouch kecil <br><br>\n                      Cara Label :\n                      <ul>\n                        <li>Dapat dicuci mesin, tidak perlu disetrika, Jangan gunakan Pemutih</li>\n                      </ul>\n                    </p>\n                  </div>\n                </div>\n                <div v-else>\n                  <div class=\"detail\">\n                    <p>Sarung lengan / manset berfungsi untuk melindungi kulit dari bahaya sinar matahari (Anti UV).\nBahan ice silk, sangat nyaman digunakan sehingga tetap sejuk saat dipakai (lihat gambar thermometer)\nDapat digunakan pria & wanita (Unisex), cocok untuk bersepeda, jogging, hiking, mancing dan lainnya</p>\n                  </div>\n                </div>\n            </div>\n            <div class=\"col-md-2 mt-5\">\n              <div class=\"classForm\">\n              <h4>PILIH UKURAN</h4>\n              <h6>Anda tidak yakin? Lihat Detail Ukuran</h6>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <form v-on:submit.prevent>\n                    <div class=\"form-group\">\n                              <label for=\"ukuran\">Ukuran</label>\n                              <select class=\"custom-select custom-select-sm\" v-model=\"pesan.size\">\n                                <option value=\"Size S\" selected>Size S</option>\n                                <option value=\"30 Size M\">30 Size M</option>\n                                <option value=\"Size L\">Size L</option>\n                                <option value=\"Size XL\">Size XL</option>\n                            </select>\n                          </div>\n                    <div class=\"form-group\">\n                      <label for=\"jumlah\">Jumlah Pemesanan</label>\n                      <input type=\"number\" class=\"form-control\" v-model=\"pesan.jumlah\">\n                    </div>\n                    <b-button type=\"submit\" align=\"center\" class=\"btnSubmit\" v-b-modal.modal-center @click=\"submitOrder\">beli</b-button>\n                  </form>\n\n                  <!-- MODAL BOX -->\n                  <div>\n                    <b-modal id=\"modal-center\" centered title=\"Dalam Keranjang Belanjaan Saya\">\n                      <div class=\"row itemKeranjang\" v-for=\"item in checkoutBag\" :key=\"item.id\">\n                            <div class=\"col-md-3 itemDetail\">\n                            <div class=\"card border-0 shadow mx-2\">\n                              <img\n                                :src=\"'../assets/pakaian/'+item.products.gambar\"\n                                class=\"card-img-top\"\n                                alt=\"...\"\n                              />\n                           </div>\n                        </div>\n                        <div class=\"col-md-9 itemDetail\">\n                          <h4>{{item.products.nama}}</h4>\n                          <h6>Ukuran : {{item.size}}</h6>\n                          <h6>Jumlah : {{item.jumlah}}</h6>\n                          <h6>Harga/Item : Rp. {{item.products.harga}}</h6>\n                          <h6>Harga/Total : Rp. {{(item.products.harga * item.jumlah)}}</h6>\n                          \n                          <!-- MODAL BOX KECIL -->\n                          <form class=\"formCustom\" v-on:submit.prevent>\n                    <div class=\"form-group\">\n                              <select class=\"inputCustom\" placeholder=\"Ubah Size\" v-model=\"item.size\">\n                                <option value=\"Size S\" selected>Size S</option>\n                                <option value=\"30 Size M\">30 Size M</option>\n                                <option value=\"Size L\">Size L</option>\n                                <option value=\"Size XL\">Size XL</option>\n                            </select>\n                    </div>\n                    <div class=\"form-group\">\n                      <input type=\"number\" class=\"inputCustom\" placeholder=\"Ubah Jumlah\" v-model=\"item.jumlah\">\n                    </div>\n                    <b-button type=\"submit\" align=\"center\" class=\"btnUbah\" v-b-modal.modal-center @click=\"ubahKeranjang(item.id, item)\">Ubah</b-button>\n                    <b-button type=\"submit\" align=\"center\" class=\"btnHapus\" v-b-modal.modal-center @click=\"hapusKeranjang(item.id)\">Hapus</b-button>\n                  </form>\n\n                          </div>\n                        </div>\n                        <h5 class=\"totalBelanja\"><strong>Total Belanja ({{checkoutBag.length}} pcs) : Rp. {{totalHarga}}</strong></h5>\n                    </b-modal>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            </div>\n\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Navbar from \"@/components/Navbar.vue\";\nimport axios from \"axios\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"DetailProduct\",\n  components: {\n    Navbar,\n  },\n\n  data: function () {\n    return {\n      checkoutBag: [],\n      // product: ``,\n      pesan : {\n        id:``,\n        jumlah:1,\n        size:`Size S`,\n        products:[],\n      },\n      menu: `detail`,\n    };\n  },\n\n  methods: {\n\n    ...mapState([`product`]),\n\n    ubahKeranjang: function (id, item) {\n      axios\n      .put(\"http://localhost:3000/checkout/\"+id,\n      {\n        id : item.id,\n        jumlah: item.jumlah,\n        size : item.size,\n        products: {\n          id: item.products.id,\n          kode: item.products.kode,\n          nama: item.products.nama,\n          harga: item.products.harga,\n          is_ready: item.products.is_ready,\n          gambar: item.products.gambar,\n        },\n      })\n      .then(() => { \n      // this.$router.push({ path : '/keranjang' })\n      this.$toast.success(`Pesanan ditambahkan ke keranjang`,{\n        duration : 3000,\n        message : `Pesanan berhasil ditambahkan`,\n        position : `top-right`,\n        dismissible : true,\n      })\n        //  setelah post axios, data checkout akan langsung ditampilkan\n        axios\n      .get(\"http://localhost:3000/checkout\")\n      .then((response) => this.setCheckout(response.data))\n      .catch((error) => console.log(\"gagal : \", error));  \n    })\n      .catch((error) => console.log(\"gagal : \", error));\n     \n    },\n  \n    hapusKeranjang: function (id) {\n      // axios hapus data\n      axios\n        .delete(\"http://localhost:3000/checkout/\" + id)\n        .then(() => {\n          this.$toast.success(`Pesanan berhasil dihapus`, {\n            duration: 3000,\n            message: `Pesanan berhasil dihapus`,\n            position: `top-right`,\n            dismissible: true,\n          });\n          // setelah dihapus, panggil kembali data yg tersisa\n          axios\n            .get(\"http://localhost:3000/checkout\")\n            .then((response) => this.setCheckout(response.data))\n            .catch((error) => console.log(\"gagal : \", error));\n        })\n        // axios gagal mengambil data\n        .catch((error) => console.log(\"gagal : \", error));\n    },\n\n    submitOrder : function (){\n      if(this.pesan.jumlah){\n        this.pesan.products = this.product;\n      axios\n      .post(\"http://localhost:3000/checkout\",this.pesan)\n      .then(() => { \n      // this.$router.push({ path : '/keranjang' })\n      this.$toast.success(`Pesanan ditambahkan ke keranjang`,{\n        duration : 3000,\n        message : `Pesanan berhasil ditambahkan`,\n        position : `top-right`,\n        dismissible : true,\n      })\n        //  setelah post axios, data checkout akan langsung ditampilkan\n        axios\n      .get(\"http://localhost:3000/checkout\")\n      .then((response) => this.setCheckout(response.data))\n      .catch((error) => console.log(\"gagal : \", error));  \n    })\n      .catch((error) => console.log(\"gagal : \", error));\n      }else{\n        this.$toast.error(`Jumlah pesanan harus diisi`,{\n        duration : 3000,\n        message : `Jumlah pesanan harus diisi`,\n        position : `top-right`,\n        dismissible : true,\n      })\n      }\n  \n    },\n  \n    setCheckout: function (data) {\n      this.checkoutBag = data;;\n      // console.log(this.checkoutBag)\n    },\n\n    setProduct: function (data) {\n      this.product = data;\n      // console.log(data);\n    },\n    active: function (data) {\n      // jika isi menu sama dengan data baru dari function active\n      if (this.menu === data) {\n        // kembalikan isi function berupa true\n        return true;\n      }\n    },\n    buttonActive: function (dataButton) {\n      // jika data menu sama dengan data menu\n      if (this.menu === this.menu) {\n        // console.log(dataButton)\n        // ubah data menu menjadi data baru dari parameter function button active\n        this.menu = dataButton;\n      }\n    },\n  },\n  computed : {\n      totalHarga: function () {\n      return this.checkoutBag.reduce((acc, curr) => {\n        return acc + curr.products.harga * curr.jumlah;\n      }, 0);\n    },\n  },\n\n  mounted() {\n    axios\n      .get(\"http://localhost:3000/products/\" + this.$route.params.id)\n      .then((response) => this.setProduct(response.data))\n      .catch((error) => console.log(\"gagal : \", error));\n\n      axios\n            .get(\"http://localhost:3000/checkout\")\n            .then((response) => this.setCheckout(response.data))\n            .catch((error) => console.log(\"gagal : \", error));\n \n  },\n};\n</script>\n\n<style scoped>\n.btnUbah {\n  background-color: rgb(230, 208, 19);\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  /* margin: 5px auto; */\n}\n\n.btnHapus {\n  background-color: rgb(230, 19, 19);\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  /* margin: 5px auto; */\n}\n  \n\n.formCustom {\n  display: flex;\n  justify-content: space-around;\n}\n\n.inputCustom {\n  border-radius: 5px;\n  background-color: transparent;\n  /* margin: 5px; */\n  text-align: center;\n  display: flex;\n  border: 1px solid grey;\n  width: 100px;\n  height: 40px;\n}\n\n.totalBelanja  {\n  text-align: center;\n  color: rgb(35, 129, 98);\n  display: block;\n  margin-top: 30px;\n}\n.itemDetail {\n  border-bottom: 1px solid rgb(209, 209, 209);\n  padding: 5px;\n}\n\n.judulForm h3 {\n  font-size: 25px;\n  color: rgb(35, 129, 98);\n}\n\n.judulForm h1 {\n  font-size: 30px;\n}\n\n.btnSubmit {\n  padding: 5px;\n  font-size: 12px;\n  background-color: rgb(70, 135, 156);\n  color: white;\n  width: 210px;\n  text-align: center;\n  border: 0px solid transparent;\n}\n\n.btnSubmit:hover {\n  background: grey;\n}\n.classForm h4 {\n  font-size: 15px;\n}\n\n.classForm h6 {\n  font-size: 9px;\n}\n\n.classForm label {\n  font-size: 10px;\n}\n\n.btnEdit {\n  margin: auto 10px;\n  background-color: white;\n  border: none;\n}\n.btnEdit.active {\n  border: none;\n  color: rgba(17, 175, 175, 0.678);\n}\n.btnEdit:hover {\n  color: rgb(109, 211, 177);\n  transition: 0.4s;\n}\n\n.classForm {\n  width: 230px;\n  padding: 10px;\n  border: 1px solid rgb(204, 203, 203);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}